/*
 * TestSpectrum.cpp
 *
 *  Created on: Aug 4, 2020
 *      Author: petrstepanov
 */

#include "TestSpectrum.h"
#include <iostream>
#include <vector>
#include <TH1I.h>
#include "../utils/FitUtils.h"
#include "../fit/FuncSReal.h"
#include "../fit/FuncSRealNoTerm0.h"

TestSpectrum::TestSpectrum(){};
TestSpectrum::~TestSpectrum(){};

//TestSpectrum* TestSpectrum::instance = NULL;
//
//TestSpectrum* TestSpectrum::getInstance(){
//    if (!instance){
//        instance = new TestSpectrum;
//    }
//    return instance;
//}

// Original digitized histogram
Int_t TestSpectrum::array[] = {2, 2, 0, 0, 0, 0, 0, 7, 2, 1, 1, 0, 2, 1, 1, 7, 2, 1, 2, 7, 21, 700, 800, 750, 150, 160, 152, 176, 163, 173, 173, 168, 166, 197, 191, 200, 184, 216, 245, 234, 320, 290, 277, 302, 343, 390, 408, 454, 478, 485, 514, 609, 522, 602, 612, 640, 636, 677, 610, 630, 670, 695, 694, 685, 656, 688, 633, 572, 601, 607, 602, 566, 546, 514, 555, 532, 495, 470, 515, 485, 491, 485, 491, 480, 468, 509, 470, 491, 508, 471, 519, 492, 491, 484, 490, 495, 488, 513, 481, 479, 480, 491, 459, 491, 485, 490, 454, 455, 393, 457, 421, 416, 437, 438, 424, 376, 397, 383, 398, 384, 341, 380, 360, 368, 356, 331, 358, 316, 311, 331, 286, 315, 312, 287, 342, 297, 307, 284, 259, 283, 295, 260, 250, 281, 261, 253, 235, 230, 227, 259, 240, 241, 212, 186, 203, 185, 210, 187, 183, 202, 189, 169, 175, 194, 174, 160, 182, 153, 154, 170, 188, 167, 135, 148, 135, 155, 149, 143, 138, 130, 121, 142, 115, 103, 96, 113, 92, 95, 84, 106, 95, 86, 93, 80, 109, 80, 89, 76, 87, 72, 65, 68, 65, 62, 80, 63, 53, 63, 65, 61, 58, 57, 61, 42, 45, 54, 47, 45, 46, 45, 42, 48, 37, 39, 42, 36, 40, 37, 23, 39, 28, 33, 27, 32, 26, 33, 42, 26, 31, 32, 35, 22, 21, 25, 29, 28, 21, 20, 24, 20, 19, 11, 15, 26, 18, 17, 11, 20, 15, 8, 15, 18, 13, 12, 15, 10, 9, 10, 12, 13, 14, 9, 8, 5, 9, 15, 8, 6, 8, 5, 14, 7, 3, 7, 5, 4, 9, 4, 3, 8, 5, 5, 7, 6};

// Corrected histogram by the generated from function
Int_t TestSpectrum::array2[] = {2, 2, 0, 0, 0, 0, 0, 7, 2, 1, 1, 0, 2, 1, 1, 7, 2, 1, 2, 7, 21, 580, 6249, 163, 150, 160, 152, 176, 163, 173, 173, 168, 166, 197, 191, 200, 184, 216, 245, 234, 320, 290, 277, 302, 343, 390, 408, 454, 478, 485, 514, 609, 522, 602, 612, 640, 636, 677, 610, 630, 670, 695, 694, 685, 656, 688, 633, 572, 601, 607, 602, 566, 546, 514, 555, 532, 495, 470, 515, 485, 491, 485, 491, 480, 468, 509, 470, 491, 508, 471, 519, 492, 491, 484, 490, 495, 488, 513, 481, 479, 480, 491, 459, 491, 485, 490, 454, 455, 393, 457, 421, 416, 437, 438, 424, 376, 397, 383, 398, 384, 341, 380, 360, 368, 356, 331, 358, 316, 311, 331, 286, 315, 312, 287, 342, 297, 307, 284, 259, 283, 295, 260, 250, 281, 261, 253, 235, 230, 227, 259, 240, 241, 212, 186, 203, 185, 210, 187, 183, 202, 189, 169, 175, 194, 174, 160, 182, 153, 154, 170, 188, 167, 135, 148, 135, 155, 149, 143, 138, 130, 121, 142, 115, 103, 96, 113, 92, 95, 84, 106, 95, 86, 93, 80, 109, 80, 89, 76, 87, 72, 65, 68, 65, 62, 80, 63, 53, 63, 65, 61, 58, 57, 61, 42, 45, 54, 47, 45, 46, 45, 42, 48, 37, 39, 42, 36, 40, 37, 23, 39, 28, 33, 27, 32, 26, 33, 42, 26, 31, 32, 35, 22, 21, 25, 29, 28, 21, 20, 24, 20, 19, 11, 15, 26, 18, 17, 11, 20, 15, 8, 15, 18, 13, 12, 15, 10, 9, 10, 12, 13, 14, 9, 8, 5, 9, 15, 8, 6, 8, 5, 14, 7, 3, 7, 5, 4, 9, 4, 3, 8, 5, 5, 7, 6};

// Corrected histogram without term 0
Int_t TestSpectrum::array3[] = {2, 2, 0, 0, 0, 0, 0, 7, 2, 1, 1, 0, 2, 1, 1, 7, 2, 1, 2, 7, 11, 15, 20, 25, 30, 35, 45, 55, 65, 85, 105, 125, 145, 165, 185, 200, 184, 216, 245, 234, 320, 290, 277, 302, 343, 390, 408, 454, 478, 485, 514, 609, 522, 602, 612, 640, 636, 677, 610, 630, 670, 695, 694, 685, 656, 688, 633, 572, 601, 607, 602, 566, 546, 514, 555, 532, 495, 470, 515, 485, 491, 485, 491, 480, 468, 509, 470, 491, 508, 471, 519, 492, 491, 484, 490, 495, 488, 513, 481, 479, 480, 491, 459, 491, 485, 490, 454, 455, 393, 457, 421, 416, 437, 438, 424, 376, 397, 383, 398, 384, 341, 380, 360, 368, 356, 331, 358, 316, 311, 331, 286, 315, 312, 287, 342, 297, 307, 284, 259, 283, 295, 260, 250, 281, 261, 253, 235, 230, 227, 259, 240, 241, 212, 186, 203, 185, 210, 187, 183, 202, 189, 169, 175, 194, 174, 160, 182, 153, 154, 170, 188, 167, 135, 148, 135, 155, 149, 143, 138, 130, 121, 142, 115, 103, 96, 113, 92, 95, 84, 106, 95, 86, 93, 80, 109, 80, 89, 76, 87, 72, 65, 68, 65, 62, 80, 63, 53, 63, 65, 61, 58, 57, 61, 42, 45, 54, 47, 45, 46, 45, 42, 48, 37, 39, 42, 36, 40, 37, 23, 39, 28, 33, 27, 32, 26, 33, 42, 26, 31, 32, 35, 22, 21, 25, 29, 28, 21, 20, 24, 20, 19, 11, 15, 26, 18, 17, 11, 20, 15, 8, 15, 18, 13, 12, 15, 10, 9, 10, 12, 13, 14, 9, 8, 5, 9, 15, 8, 6, 8, 5, 14, 7, 3, 7, 5, 4, 9, 4, 3, 8, 5, 5, 7, 6};

std::vector<Double_t> digitizedPoints = {
    1.640387399200037, 2.593376962177672,
    12.75970300173983, 2.4998587485314374,
    20.563486203141046, 7.4804829436416185,
    21.357455836997765, 20.594074452187783,
    22.25990659868412, 24.8774852952349,
    23.374020250589844, 7000, // 799.7192505294494,
    24.415189695851502, 163.39510276287865,
    25.631238200631635, 161.85333616485696,
    26.718855025337596, 155.78868000989723,
    27.545244306591677, 176.9760106299036,
    28.97513779324293, 163.84371547862816,
    29.97513779324293, 163.84371547862816,
    30.4982377661616, 173.9234202728004,
    31.4982377661616, 172.9234202728004,
    32.70589106297087, 169.86784707434106,
    33.55659507977298, 197.11048202794234,
    34.64826436040361, 192.05504326191522,
    35.79666802397963, 201.1286479409432,
    36.218456598781536, 185.97791801180279,
    37.34813518837101, 218.27287445764307,
    38.57758797044044, 247.5308269153212,
    39.57758797044044, 247.5308269153212,
    40.73661179615366, 231.3646450496717,
    41.35040300505192, 291.9145711118341,
    42.7762440357785, 277.77305857162617,
    43.667472611827314, 315.1078674145525,
    44.481704525307386, 333.2675458677613,
    45.437772396150926, 386.7498329336078,
    46.437772396150926, 389.7498329336078,
    47.74268463515231, 406.9154770695288,
    48.678490226372524, 455.35167719071285,
    49.678490226372524, 477.35167719071285,
    50.015822112771254, 483.5910604380938,
    51.907050688820085, 520.9258692810203,
    52.45304119282482, 610.7446582591194,
    53.34317872304775, 601.6539085742563,
    54.34317872304775, 611.0,
    55.3382339475012, 636.9609308179531,
    56.458270419604524, 638.9700137744535,
    57.823324611461054, 609.6902404002578,
    58.46143055590732, 676.2954707960153,
    59.75354054111974, 628.8497844210345,
    60.66097894086726, 670.2214628196909,
    61.499525589895335, 694.4364456064948,
    62.5749850468273, 685.3441372847376,
    63.528870826019094, 645.9753072950051,
    64.81100553510925, 688.3530858088059,
    65.70005201950633, 632.8367775961532,
    66.70005201950633, 633.8367775961532,
    67.68076778453403, 572.2650306174735,
    68.93453530215149, 607.5782874087466,
    69.93453530215149, 606.5782874087466,
    70.64997106780262, 573.2493098161003,
    71.77252279019382, 556.0001714500582,
    72.77252279019382, 548.0001714500582,
    73.56540137822466, 514.688204430815,
    74.8394311754655, 555.0475481667507,
    75.04347817616102, 531.8246377630443,
    76.6409036976712, 495.9911859083638,
    77.64949763184606, 470.24679066922016,
    78.75846778200122, 515.6537799867126,
    79.57160864965545, 487.3878999121318,
    80.23545353411174, 491.3646547911523,
    81.23545353411174, 486.3646547911523,
    82.9155082422667, 489.37827922590293,
    83.80969822841433, 481.29674692997236,
    84.68565216290094, 468.6737363838455,
    85.59511679061075, 510.5500234769682,
    86.73837695243623, 472.1888522392741,
    87.55621516203004, 469.51586789773,
    88.55621516203004, 509.51586789773,
    89.88884970648917, 472.1623554120743,
    90.82465529770937, 520.5985555332584,
    91.8312230039219, 494.3495515996485,
    92.93504965232654, 492.3217650004188,
    93.8312658664365, 484.74484139895446,
    94.78624269145419, 491.8015699370115,
    95.9123578474445, 495.32447897691065,
    96.99592221622578, 488.2506054330185,
    97.59592221622578, 514.2506054330185,
    98.03194815973688, 515.4916817497258,
    99.08714533704548, 501.35328648330596,
    99.74941015335037, 481.6673128515456,
    100.86134171360433, 481.65796103018096,
    101.01582406106738, 492.2453917926077,
    102.81478133298523, 460.4472508567631,
    103.05031279894166, 491.2190293978401,
    104.77539068207898, 487.1759252945336,
    105.07872285292896, 488.6788409196736,
    106.68425328628845, 454.8638238428582,
    107.3562030825941, 455.8590134997437,
    108.84218606617583, 392.27208344941926,
    109.21955348949572, 458.36647060313396,
    110.80887409915658, 420.51458397058843,
    111.08789153445852, 415.9621952621335,
    112.91630704367492, 437.654134576606,
    113.21356053063789, 438.64322411834723,
    114.21356053063789, 437.64322411834723,
    115.2748363918335, 425.01865493532625,
    116.19832875159028, 378.08069452859996,
    117.0206655769197, 398.25880775967374,
    118.70521890081028, 384.1235297670422,
    119.87793729993433, 399.25243877966517,
    120.93110824928056, 384.6094348187792,
    121.05613235944503, 341.70678533088875,
    121.77014392063418, 381.06158758857435,
    122.80102636239474, 360.8678879885595,
    123.3160214234641, 368.9291580048668,
    124.82335773249503, 356.81387342699435,
    125.01727359337889, 331.0679195509567,
    126.87000383814333, 358.81516319902425,
    127.81983716141048, 318.43711582035917,
    128.91150644204106, 313.38167705433204,
    129.91150644204106, 327.38167705433204,
    130.10043466486383, 332.5474556226851,
    131.02595325258295, 286.114103910425,
    132.2635109465017, 317.3904911459683,
    133.6204602265089, 286.0922829939076,
    134.96338177446913, 343.608322341696,
    135.89700527403755, 299.19340540730104,
    136.0413564816889, 307.25779269739644,
    137.31879384883948, 284.0426754781605,
    138.27070171781268, 258.7966543859068,
    139.5467094252721, 285.0331892243637,
    140.3657569422661, 294.10367662960346,
    141.67736605951262, 261.8024856361868,
    142.7487730605199, 251.70095992549705,
    143.61163444509603, 281.971247045896,
    144.01721319619924, 262.7836475610254,
    145.65718950491845, 237.5469782901364,
    146.1843419337618, 248.635900473241,
    147.86484280172772, 233.49140509167694,
    148.77119015564938, 228.43752496254388,
    149.8274783787838, 260.72468822391363,
    150.48771696712637, 240.53410589768714,
    151.98244974857235, 243.54928896933188,
    152.6062162335929, 214.27575014271258,
    153.61278393980538, 188.02674620910273,
    154.7936072507788, 205.17408999959082,
    155.6432202217551, 185.99116642540275,
    156.63466915009474, 202.1308514638523,
    157.6979712392527, 190.01089097529746,
    158.78964051988333, 184.95545220927033,
    159.98667365455535, 206.13966555548836,
    160.03781837593928, 190.99205290013606,
    161.69400450835718, 169.79225318497697,
    162.45960695074123, 175.84132297099563,
    163.64853517356391, 195.0071015393487,
    164.6834700712492, 175.82261932826646,
    165.37207585106444, 162.69655872456735,
    166.56910898573648, 183.8807720707855,
    167.1969279266817, 155.61645063309868,
    168.30480703101102, 154.5978814228016,
    169.4815778860597, 170.7360078243571,
    170.67050610888245, 189.90178639271016,
    171.69328363879367, 167.68965201483036,
    172.29678784419082, 133.37002624354864,
    173.47761115516423, 150.51737003403673,
    174.17432184682883, 139.4097442082027,
    175.3591976137269, 157.56630538762317,
    176.44276198250816, 150.49243184373108,
    177.53037880721413, 144.42777568877136,
    178.62610054376944, 140.3815543116766,
    179.7137173684754, 134.3168981567169,
    180.41853297198932, 125.22770710874784,
    181.41853297198932, 120.22770710874784,
    182.7112878432167, 142.36569907787134,
    183.34315924008658, 115.11059502911723,
    184.41456624109384, 105.00906931842758,
    185.11938184460774, 95.91987827045853,
    186.3083100674305, 115.08565683881159,
    187.33919250919107, 94.89195723879675,
    188.46733389314372, 98.9194749731621,
    189.33315668781867, 83.77342095470397,
    190.36513017540508, 110.0052798824787,
    191.05373595522036, 96.87921927877971,
    192.13324786807695, 88.79612834595503,
    193.63608556137228, 93.82974619546474,
    194.7115450183042, 84.73743787370745,
    195.29948428601764, 82.96462089079989,
    196.29948428601764, 110.96462089079989,
    197.51366242652483, 90.26475395942475,
    198.5349565237721, 90.64472625465396,
    199.1349565237721, 78.64472625465396,
    200.6499515848415, 86.70599627096124,
    201.52793174729038, 74.58759441930056,
    202.80087049870534, 68.52137962744678,
    203.80087049870534, 67.52137962744678,
    204.80087049870534, 68.52137962744678,
    205.39537747263128, 68.49955871092936,
    206.39537747263128, 65.49955871092936,
    207.97367462285854, 64.44086823868167,
    208.97367462285854, 82.44086823868167,
    209.52514178724994, 81.58509475538153,
    210.39096458192483, 66.4390407369234,
    211.87353999559684, 66.42657164177069,
    212.74746770212107, 53.29895240117753,
    213.89992382162177, 63.38177446913801,
    214.56421486588903, 44.200409531844,
    215.56421486588903, 45.200409531844,
    216.441748868527, 50.24012749649796,
    217.57394270840433, 55.27686261979568,
    218.57394270840433, 48.27686261979568,
    219.0322033865283, 49.20908919104784,
    220.24390913926226, 45.16273338152109,
    221.24390913926226, 46.16273338152109,
    222.3720505232149, 50.190251115886554,
    223.44345752422214, 40.08872540519678,
    224.31288661501083, 42.11000859198589,
    225.31288661501083, 44.11000859198589,
    226.02175467444948, 36.030034932949434,
    227.89523622116275, 41.06053550867091,
    228.89523622116275, 37.06053550867091,
    229.31297234004, 24.900588190597887,
    230.485690739164, 40.029497203220785,
    231.57736001979464, 34.97405843719366,
    232.66902930042528, 29.91861967116654,
    233.66902930042528, 31.91861967116654,
    234.53035347936458, 31.92146808009045,
    235.61797030407058, 25.856811925130728,
    236.38357274645455, 31.90588171114939,
    237.5157665863319, 36.94261683444745,
    238.27731657279122, 41.982469231533514,
    239.96997480853116, 29.86562601676701,
    240.46470758997714, 32.88080908841164,
    241.58879651800515, 35.899109433844615,
    242.2855072096698, 24.791483608010594,
    243.14683138860903, 26.794332016934618,
    244.90432891914378, 30.824967025088085,
    245.90432891914378, 30.824967025088085,
    246.753495730309, 29.800163267214543,
    247.46641624567235, 22.729406997110573,
    248.58645271777567, 24.73848995361095,
    249.58645271777567, 21.73848995361095,
    250.58645271777567, 22.73848995361095,
    251.53539372142092, 20.676682207575254,
    252.87361792744156, 12.59982582232692,
    253.37645562073686, 17.633443671836744,
    254.15016297497021, 25.700948235720375,
    255.34971135993015, 19.62694025939595,
    256.68793556595074, 11.550083874147731,
    257.68793556595074, 11.550083874147731,
    258.21103553886945, 21.629788668319975,
    259.64498148144537, 9.506710905977116,
    260.78528023317205, 16.561880807140028,
    261.78528023317205, 15.561880807140028,
    262.280013014618, 19.577063878784656,
    263.73422123681735, 12.500073061104331,
    264.5995978716813, 13.512138858960839,
    265.5995978716813, 15.512138858960839,
    266.69937206416125, 12.475134870798684,
    267.4528171387713, 15.49655249001978,
    268.4528171387713, 12.49655249001978,
    269.29793149401183, 13.46253134321364,
    270.29793149401183, 13.46253134321364,
    271.15520321702655, 14.45616236320518,
    272.99626511634244, 11.412923827466557,
    273.34259423421247, 5.354502220083418,
    274.6621362287611, 10.89428740095343,
    275.61508682581643, 17.446407244544275,
    276.69459873867305, 9.363316311719586,
    277.91440940325634, 8.33539528005781,
    278.91440940325634, 8.33539528005781,
    279.7757335821957, 10.33824368898172,
    280.7757335821957, 10.33824368898172,
    281.7757335821957, 10.33824368898172,
    282.9833868790049, 6.2826704905224915,
    283.73683195361497, 9.304088109743589,
    284.95259016227357, 7.2669496891492145,
    285.95259016227357, 7.2669496891492145,
    286.95259016227357, 7.2669496891492145,
    287.0766790903016, 10.285250034582191,
    288.18050573870613, 8.257463435352633,
    289.66713360830283, 9.254211729132294,
    290.77096025670744, 7.226425129902509,
    291.7056748021018, 9.237066723297175,
    292.3573623187841, 5.186169435520128,
    293.3573623187841, 5.186169435520128,
    294.964026660484, 6.192000685800167,
    295.964026660484, 1.192000685800167,
    296.964026660484, 2.192000685800167,
    297.964026660484, 1.192000685800167,
    298.92107257597866, 6.148627717629438,
    299.964026660484, 4.192000685800167
};

TH1* TestSpectrum::getHistogramDigitized(){
  Int_t xMax = digitizedPoints.size()/2;
  TH1* hist = new TH1D("bellamyHistDig", "E.H. Bellamy histogram. Digitized from original figure.", xMax, 0, xMax);
  std::vector<Double_t>::iterator it = digitizedPoints.begin();
  while(it != digitizedPoints.end()){
    Double_t x = *it;
    it++;
    Double_t y = *it;
    Int_t binNumber = hist->FindBin(x);
    hist->SetBinContent(binNumber,y);
    it++;
  }
  hist->GetYaxis()->SetTitle("Number of events");
  hist->GetXaxis()->SetTitle("ADC channel");
  return hist;
}

TH1* TestSpectrum::getHistogramPaper(){
	std::vector<Int_t> vector (array, array + sizeof(array) / sizeof(array[0]) );
	TH1* hist = new TH1I("bellamyHistDigitized", "Bellamy histogram. Digitized from figure.", (Int_t)vector.size(), 0, (Int_t)vector.size());
	hist->GetXaxis()->SetTitle("ADC Channel");
	hist->GetYaxis()->SetTitle("Events");

	Int_t bin = 0;
	for (int count : vector) {
		hist->SetBinContent(++bin, count);
	}
	return hist;
}

TH1* TestSpectrum::getHistogramPaperFix(){
	std::vector<Int_t> vector (array2, array2 + sizeof(array2) / sizeof(array2[0]) );
	TH1* hist = new TH1I("bellamyHistDigitizedFix", "Bellamy histogram. Digitized from figure.", (Int_t)vector.size(), 0, (Int_t)vector.size());
	hist->GetXaxis()->SetTitle("ADC Channel");
	hist->GetYaxis()->SetTitle("Events");

	Int_t bin = 0;
	for (int count : vector) {
		hist->SetBinContent(++bin, count);
	}
	return hist;
}

TH1* TestSpectrum::getHistogramPaperNoTerm0(){
	std::vector<Int_t> vector (array3, array3 + sizeof(array3) / sizeof(array3[0]) );
	TH1* hist = new TH1I("bellamyHistDigitizedNoTerm0", "Bellamy histogram with cut Term0. Digitized from figure.", (Int_t)vector.size(), 0, (Int_t)vector.size());
	hist->GetXaxis()->SetTitle("ADC Channel");
	hist->GetYaxis()->SetTitle("Events");

	Int_t bin = 0;
	for (int count : vector) {
		hist->SetBinContent(++bin, count);
	}
	return hist;
}

TH1* TestSpectrum::getHistogramGenerated(FitParameters* parameters){
	Int_t nBins = sizeof(array) / sizeof(array[0]);
	TH1F *hist = new TH1F("histBellamy", "Bellamy histogram. Random fill from fit function.", nBins, 0, nBins);
	hist->GetXaxis()->SetTitle("ADC Channel");
	hist->GetYaxis()->SetTitle("Events");
	FuncSReal* funcObj = new FuncSReal(hist);
	FitUtils::fillHistogramFromFuncObject(hist, parameters, funcObj);
	return hist;
}

TH1* TestSpectrum::getHistogramGeneratedNoTerm0(FitParameters* parameters){
	Int_t nBins = sizeof(array) / sizeof(array[0]);
	TH1F *hist = new TH1F("histBellamyNoTerm0", "Bellamy histogram without Term0. Random fill from fit function.", nBins, 0, nBins);
	hist->GetXaxis()->SetTitle("ADC Channel");
	hist->GetYaxis()->SetTitle("Events");
	FuncSRealNoTerm0* funcObj = new FuncSRealNoTerm0(hist);
	FitUtils::fillHistogramFromFuncObject(hist, parameters, funcObj);
	return hist;
}
