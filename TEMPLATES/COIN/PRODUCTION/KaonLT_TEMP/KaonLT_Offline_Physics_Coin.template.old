******************************
******Author - Ali Usman******
*****Created - May, 2022******
******************************

Note - The uncertainties for the efficiencies are purely statistical and blow up quickly with low statistics (e.g. individual run). Therefore, they should not be used for yield calculations. An overall error for entire setting must be used instead which should be calculated using same formula. Please contact AU for further details.

=====================================
=========== General Info ============
=====================================

KLT_Run_Number		:		{gen_run_number}
KLT_Beam_Energy		:		{gpbeam}
KLT_Target_Mass_(amu)	:		{gtargmass_amu}

KLT_HMS_Particle_Mass	:		{hpartmass}
KLT_HMS_P_Central	:		{hpcentral}
KLT_HMS_Angle		:		{htheta_lab}

KLT_SHMS_Particle_Mass	:		{ppartmass}
KLT_SHMS_P_Central	:		{ppcentral}
KLT_SHMS_Angle		:		{ptheta_lab}

KLT_SHMS_Run_Length	:		{P.1MHz.scalerTime:%.3f} sec
KLT_HMS_Run_Length	:		{H.1MHz.scalerTime:%.3f} sec

 With no cuts on BCM{gBCM_Current_threshold_index+1}.

KLT_BCM1_Current			:		{H.BCM1.scalerCharge/H.1MHz.scalerTime:%.3f} uA
KLT_Unser_Current			:		{H.Unser.scalerCharge/H.1MHz.scalerTime:%.3f} uA

KLT_BCM1_Charge				:		{H.BCM1.scalerCharge/1000.:%.3f} mC
KLT_Unser_Charge			:		{H.Unser.scalerCharge/1000.:%.3f} mC

Cut on BCM{gBCM_Current_threshold_index+1} current of {gBCM_Current_threshold} uA. Beam over threshold for {H.1MHz.scalerTimeCut:%.3f}s, or {((H.1MHz.scalerTimeCut/H.1MHz.scalerTime)*100.):%.3f}% of total run time.

KLT_BCM1_Beam_Cut_Current		   :	       {H.BCM1.scalerChargeCut/H.1MHz.scalerTimeCut:%.3f} uA
KLT_Unser_Beam_Cut_Current   	   	   :	       {H.Unser.scalerChargeCut/H.1MHz.scalerTimeCut:%.3f} uA

KLT_BCM1_Beam_Cut_Charge   	   	   :	       {H.BCM1.scalerChargeCut/1000.:%.3f} mC
KLT_Unser_Beam_Cut_Charge   	   	   :	       {H.Unser.scalerChargeCut/1000.:%.3f} mC

KLT_Ps1_factor	 	 	    	   :		  {gHC_ti_ps_factors[0]}
KLT_Ps2_factor				   :		  {gHC_ti_ps_factors[1]}
KLT_Ps3_factor				   :		  {gHC_ti_ps_factors[2]}
KLT_Ps4_factor				   :		  {gHC_ti_ps_factors[3]}
KLT_Ps5_factor				   :		  {gHC_ti_ps_factors[4]}
KLT_Ps6_factor				   :		  {gHC_ti_ps_factors[5]}

KLT_Total_SHMS_3/4_Triggers                   :		{P.pTRIG1.scaler}
KLT_(current_cut)_Total_SHMS_3/4_Triggers     :		{P.pTRIG1.scalerCut}
KLT_Pre-Scaled_SHMS_3/4_Triggers              :		{(P.pTRIG1.scaler/gHC_ti_ps_factors[0]):%.0f}
KLT_SHMS_3/4_Trigger_Rate                     :		{P.pTRIG1.scalerCut/P.1MHz.scalerTimeCut/1000.:%.3f} kHz
KLT_Accepted_SHMS_Triggers                    :		{pTRIG1_ROC2.npassed}

KLT_Total_HMS_EL-REAL_Triggers                :		{P.pTRIG3.scaler}
KLT_(current_cut)_Total_HMS_EL-REAL_Triggers  :		{P.pTRIG3.scalerCut}
KLT_Pre-Scaled_HMS_EL-REAL_Triggers           :		{(P.pTRIG3.scaler/gHC_ti_ps_factors[2]):%.0f}
KLT_HMS_EL-REAL_Trigger_Rate                  :		{P.pTRIG3.scalerCut/P.1MHz.scalerTimeCut/1000.:%.3f} kHz
KLT_Accepted_HMS_Triggers                     :		{pTRIG3_ROC2.npassed}

KLT_Total_COIN_Triggers                       :		{P.pTRIG5.scaler}
KLT_(current_cut)_Total_COIN_Triggers         :		{P.pTRIG5.scalerCut}
KLT_Pre-Scaled_COIN_Triggers                  :		{(P.pTRIG5.scaler/gHC_ti_ps_factors[4]):%.0f}
KLT_COIN_Trigger_Rate                         :		{P.pTRIG5.scalerCut/P.1MHz.scalerTimeCut/1000.:%.3f} kHz
KLT_Accepted_COIN_Triggers                    :		{pTRIG5_ROC2.npassed}

=:=:=:=:
= EDTM =
=:=:=:=:

KLT_EDTM_Accepted_Triggers     :    {edtm_accepted.npassed}

EDTM Live Time calculation using scalar cut (Probably incorrect)

KLT_Scaler_EDTM_Live_Time             	     :    {edtm_accepted.npassed/(P.EDTM.scalerCut+0.0001):%8.4f} +- {(sqrt(P.EDTM.scalerCut-edtm_accepted.npassed) / (P.EDTM.scalerCut+.0001)):%8.4f}

EDTM Live Time calculation using non-scaler cut (Probably correct value)

KLT_Non_Scaler_EDTM_Live_Time	 	     :    {edtm_accepted.npassed/(P.EDTM.scaler+0.0001):%8.4f} +- {(sqrt((((P.EDTM.scaler)*(edtm_accepted.npassed))+((edtm_accepted.npassed)*(edtm_accepted.npassed))) / ((P.EDTM.scaler)*(P.EDTM.scaler)*(P.EDTM.scaler)))):%8.4f}

=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
=   Computer Live/Dead Times   =
=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:

???????

*******************************
***  Detector Efficiencies  ***
*******************************

=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
=     Tracking Efficiency    =
=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:

KLT_SHMS_Had_Trk_Should         :       {shmsScinShould.npassed}
KLT_SHMS_Had_Trk_Did            :       {shmsScinDid.npassed}
KLT_SHMS_Prot_Trk_Should        :       {shmsScinShouldp.npassed}
KLT_SHMS_Prot_Trk_Did           :       {shmsScinDidp.npassed}
KLT_SHMS_Pion_Trk_Should        :       {shmsScinShouldpi.npassed}
KLT_SHMS_Pion_Trk_Did           :       {shmsScinDidpi.npassed}
KLT_HMS_Elec_Trk_Should         :       {HMSScinShoulde.npassed}
KLT_HMS_Elec_Trk_Did            :       {HMSScinDide.npassed}

KLT_SHMS_Hadron_Singles_TRACK_EFF            :          {shmsScinDid.npassed / (shmsScinShould.npassed+0.0001):%8.4f} +- {(sqrt((((shmsScinShould.npassed)*(shmsScinDid.npassed))+((shmsScinDid.npassed)*(shmsScinDid.npassed))) / ((shmsScinShould.npassed)*(shmsScinShould.npassed)*(shmsScinShould.npassed)))):%8.4f}

KLT_SHMS_Prot_Singles_TRACK_EFF              :          {shmsScinDidp.npassed / (shmsScinShouldp.npassed+0.0001):%8.4f} +- {(sqrt((((shmsScinShouldp.npassed)*(shmsScinDidp.npassed))+((shmsScinDidp.npassed)*(shmsScinDidp.npassed))) / ((shmsScinShouldp.npassed)*(shmsScinShouldp.npassed)*(shmsScinShouldp.npassed)))):%8.4f}

KLT_SHMS_Pion_Singles_TRACK_EFF              :          {shmsScinDidpi.npassed / (shmsScinShouldpi.npassed+0.0001):%8.4f} +- {(sqrt((((shmsScinShouldpi.npassed)*(shmsScinDidpi.npassed))+((shmsScinDidpi.npassed)*(shmsScinDidpi.npassed))) / ((shmsScinShouldpi.npassed)*(shmsScinShouldpi.npassed)*(shmsScinShouldpi.npassed)))):%8.4f}

KLT_HMS_Electron_Singles_TRACK_EFF           :          {HMSScinDide.npassed/(HMSScinShoulde.npassed+0.0001):%8.4f} +- {(sqrt((((HMSScinShoulde.npassed)*(HMSScinDide.npassed))+((HMSScinDide.npassed)*(HMSScinDide.npassed))) / ((HMSScinShoulde.npassed)*(HMSScinShoulde.npassed)*(HMSScinShoulde.npassed)))):%8.4f}

=:=:=:=:=:=:=:=:=:=:=:=:=
=     SHMS Cerenkovs    =
=:=:=:=:=:=:=:=:=:=:=:=:=

***************
* HGC Cerenkov
***************

KLT_SHMS_Pion_HGC_Did		    :   {SHMSHGCDidpi.npassed}
KLT_SHMS_Pion_HGC_Should	    :	{SHMSHGCShouldpi.npassed}

KLT_SHMS_HGC_Pion_Eff		      :   {SHMSHGCDidpi.npassed/(SHMSHGCShouldpi.npassed+0.0001):%8.4f} +- {(sqrt((((SHMSHGCShouldpi.npassed)*(SHMSHGCDidpi.npassed))+((SHMSHGCDidpi.npassed)*(SHMSHGCDidpi.npassed))) / ((SHMSHGCDidpi.npassed)*(SHMSHGCDidpi.npassed)*(SHMSHGCDidpi.npassed)))):%8.4f}

**********
* Aerogel
**********

KLT_SHMS_Pion_Aero_Did		    :   {SHMSAeroDidpi.npassed}
KLT_SHMS_Pion_Aero_Should	    :	{SHMSAeroShouldpi.npassed}

KLT_SHMS_Aero_Pion_Eff		      :   {SHMSAeroDidpi.npassed/(SHMSAeroShouldpi.npassed+0.0001):%8.4f} +- {(sqrt((((SHMSAeroShouldpi.npassed)*(SHMSAeroDidpi.npassed))+((SHMSAeroDidpi.npassed)*(SHMSAeroDidpi.npassed))) / ((SHMSAeroShouldpi.npassed)*(SHMSAeroShouldpi.npassed)*(SHMSAeroShouldpi.npassed)))):%8.4f}

=:=:=:=:=:=:=:=:=:=:=:=:=
=      HMS Cerenkov     =
=:=:=:=:=:=:=:=:=:=:=:=:=

KLT_HMS_Elec_Cer_Did		    :   {HMSHGCDidelec.npassed}
KLT_HMS_Elec_Cer_Should		    :	{HMSHGCShouldelec.npassed}

KLT_HMS_Cer_Elec_Eff		      :   {HMSHGCDidelec.npassed/(HMSHGCShouldelec.npassed+0.0001):%8.4f} +- {(sqrt((((HMSHGCShouldelec.npassed)*(HMSHGCDidelec.npassed))+((HMSHGCDidelec.npassed)*(HMSHGCDidelec.npassed))) / ((HMSHGCShouldelec.npassed)*(HMSHGCShouldelec.npassed)*(HMSHGCShouldelec.npassed)))):%8.4f}

**************************
* Hodoscope Efficiencies *
**************************

=:=:=:=:=
= SHMS  =
=:=:=:=:=

KLT_SHMS_Hodo_Plane_1	:	{phodo_plane_AND_eff[0]}
KLT_SHMS_Hodo_Plane_2	:	{phodo_plane_AND_eff[1]}
KLT_SHMS_Hodo_Plane_3	:	{phodo_plane_AND_eff[2]}
KLT_SHMS_Hodo_Plane_4	:	{phodo_plane_AND_eff[3]}

KLT_SHMS_Hodo_S1XY	:	{phodo_s1XY_eff}
KLT_SHMS_Hodo_S2XY	:	{phodo_s2XY_eff}

KLT_SHMS_Hodo_3_of_4_EFF	:	{phodo_3_of_4_eff}
KLT_SHMS_Hodo_4_of_4_EFF	:	{phodo_4_of_4_eff}

=:=:=:=:=
=  HMS  =
=:=:=:=:=

KLT_HMS_Hodo_Plane_1	:	{hhodo_plane_AND_eff[0]}
KLT_HMS_Hodo_Plane_2	:	{hhodo_plane_AND_eff[1]}
KLT_HMS_Hodo_Plane_3	:	{hhodo_plane_AND_eff[2]}
KLT_HMS_Hodo_Plane_4	:	{hhodo_plane_AND_eff[3]}

KLT_HMS_Hodo_S1XY	:	{hhodo_s1XY_eff}
KLT_HMS_Hodo_S2XY	:	{hhodo_s2XY_eff}

KLT_HMS_Hodo_3_of_4_EFF	:	{hhodo_3_of_4_eff}
KLT_HMS_Hodo_4_of_4_EFF	:	{hhodo_4_of_4_eff}

****************************
* Calorimeter Efficiencies *
****************************

These are raw efficiencies and should not be used for yield calculation

=:=:=:=:=
= SHMS  =
=:=:=:=:=

shmsPreShower        Counts: {P.cal.stat_trksum1} eff : {P.cal.stat_hitsum1 / P.cal.stat_trksum1} 
shmsShowerArray      Counts: {P.cal.stat_trksum_array} eff : {P.cal.stat_hitsum_array / P.cal.stat_trksum_array}

=:=:=:=:=
=  HMS  =
=:=:=:=:=

hA       Counts: {H.cal.stat_trksum1} eff : {H.cal.stat_hitsum1 / H.cal.stat_trksum1}
hB       Counts: {H.cal.stat_trksum2} eff : {H.cal.stat_hitsum2 / H.cal.stat_trksum2}
hC       Counts: {H.cal.stat_trksum3} eff : {H.cal.stat_hitsum3 / H.cal.stat_trksum3}
hD       Counts: {H.cal.stat_trksum4} eff : {H.cal.stat_hitsum4 / H.cal.stat_trksum4}

===================
== Triggers Info ==
===================

KLT_SHMS_Hodoscope_S1X_Rate         :    {P.S1X.scalerCut} [ {(P.S1X.scalerCut/P.1MHz.scalerTimeCut)/1000.:%.3f} kHz ]
KLT_HMS_Hodoscope_S1X_Rate          :    {H.S1X.scalerCut} [ {(H.S1X.scalerCut/H.1MHz.scalerTimeCut)/1000.:%.3f} kHz ]